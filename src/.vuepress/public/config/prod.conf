server {
     server_name zhoubichuan.com; # 填写相应的子域名，不需要加 https:// 的前缀。填写这个使得 Nginx 可以正确匹配不同子域的请求

     location ~*^.+$ {
          gzip on;
          gzip_min_length 1k;
          gzip_http_version 1.1;
          gzip_comp_level 9;
          gzip_types text/css application/javascript;
          root /usr/src/zhoubichuan/prod/; # 指示这个子域名所对应的文件夹根目录的位置
          try_files $uri $uri/ /index.html;
          index index.html index.htm; # 显示主页时所使用的文件名
     }

     location ^~/common-node/api {
          proxy_pass http://localhost:3000/api;
          proxy_http_version 1.1; # 设置 HTTP 版本，SSE 需要 HTTP/1.1
          proxy_set_header Connection ''; # 保持连接活性，不发送连接关闭的信号
          proxy_buffering off;  #不对 SSE 响应进行缓冲，直接透传给客户端
          proxy_cache off; # 关闭代理缓存
          proxy_read_timeout 3600s;  # 设置代理读取服务器响应的超时时间
          proxy_send_timeout 3600s;
          proxy_connect_timeout 1h;  # 设置客户端连接的超时时间
          proxy_set_header Host $host; # 配置代理传递的头部，确保 Host 头部正确传递
          proxy_set_header X-Accel-Buffering no; # 设置代理的响应头部，保持传输编码为 chunked
          add_header Cache-Control no-cache;
          # add_header X-Accel-Buffering "no";
          chunked_transfer_encoding on; # 启用分块传输编码
          gzip off;
                    
          
          # 设置跨域资源共享 (CORS)，如果你的客户端和服务器不在同一个域上
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Origin,Authorization,Accept,X-Requested-With' always;
          if ($request_method = 'OPTIONS') {
               # 如果请求方法为 OPTIONS，则返回 204 (无内容)
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'Origin,Authorization,Accept,X-Requested-With';
               add_header 'Access-Control-Max-Age' 1728000;
               add_header 'Content-Type' 'text/plain charset=UTF-8';
               add_header 'Content-Length' 0;
               return 204;
          }
     }

     location ^~/antdpro-express/api {
          proxy_pass http://localhost:7001/api;
     }

     location ^~/abstract-express/api {
          proxy_pass http://localhost:7005/api;
     }

     location ^~/abstract-egg/api {
          proxy_pass http://localhost:7006/api;
     }

     location ^~/child/resume {
          root html;
          index index.html index.htm;
          try_files $uri $uri/ /child/resume/index.html;
     }
}