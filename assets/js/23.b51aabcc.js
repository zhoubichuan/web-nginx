(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{370:function(t,s,a){"use strict";a.r(s);var r=a(6),_=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"八-配置负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-配置负载均衡"}},[t._v("#")]),t._v(" 八.配置负载均衡")]),t._v(" "),a("ul",[a("li",[t._v("使用集群是网站解决高并发、海量数据问题的常用手段")]),t._v(" "),a("li",[t._v("当一台服务器的处理能力、存储空间不足时，不要企图去换更强大的服务器，对大型网站而言，不管多么强大的服务器，都满足不了网站持续增长的业务需求")]),t._v(" "),a("li",[t._v("这种情况下，更恰当的做法是增加一台服务器分担原有服务器的访问及存储压力，通过负载均衡调度服务器，将来自浏览器的访问请求分发到应用服务器集群中的任何一台服务器上，如果有更多的用户，就在集群中加入更多的应用服务器，使应用服务器的负载压力不再成为整个网络的瓶颈")])]),t._v(" "),a("h2",{attrs:{id:"_1-upstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-upstream"}},[t._v("#")]),t._v(" 1.upstream")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("种类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("语法")]),t._v(" "),a("td",[t._v("upstream name {}")])]),t._v(" "),a("tr",[a("td",[t._v("默认")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("上下文")]),t._v(" "),a("td",[t._v("http")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("upstream abc "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ip_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("abc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"_2-后端服务器调试状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-后端服务器调试状态"}},[t._v("#")]),t._v(" 2.后端服务器调试状态")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("状态")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("down")]),t._v(" "),a("td",[t._v("不参与负载均衡")])]),t._v(" "),a("tr",[a("td",[t._v("backup")]),t._v(" "),a("td",[t._v("备份的服务器")])]),t._v(" "),a("tr",[a("td",[t._v("max_fails")]),t._v(" "),a("td",[t._v("允许请求失败的次数")])]),t._v(" "),a("tr",[a("td",[t._v("fail_timeout")]),t._v(" "),a("td",[t._v("经过 max_fails 失败后，服务暂停的时间")])]),t._v(" "),a("tr",[a("td",[t._v("max_conns")]),t._v(" "),a("td",[t._v("限制最大的接收的连接数")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-分配方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-分配方式"}},[t._v("#")]),t._v(" 3.分配方式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("种类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("轮询（默认）")]),t._v(" "),a("td",[t._v("每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除。")])]),t._v(" "),a("tr",[a("td",[t._v("weight(加权轮询)")]),t._v(" "),a("td",[t._v("指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。")])]),t._v(" "),a("tr",[a("td",[t._v("ip_hash")]),t._v(" "),a("td",[t._v("每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。")])]),t._v(" "),a("tr",[a("td",[t._v("url_hash（第三方）")]),t._v(" "),a("td",[t._v("按访问的 URL 地址来分配 请求，每个 URL 都定向到同一个后端 服务器上(缓存)")])]),t._v(" "),a("tr",[a("td",[t._v("fair（第三方）")]),t._v(" "),a("td",[t._v("按后端服务器的响应时间来分配请求，响应时间短的优先分配。")])]),t._v(" "),a("tr",[a("td",[t._v("least_conn")]),t._v(" "),a("td",[t._v("最小连接数，哪个连接少就分给谁")])]),t._v(" "),a("tr",[a("td",[t._v("自定义 hash")]),t._v(" "),a("td",[t._v("hash 自定义 key")])])])])])}),[],!1,null,null,null);s.default=_.exports}}]);