(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{413:function(s,t,a){"use strict";a.r(t);var e=a(7),v=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"七-代理服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七-代理服务"}},[s._v("#")]),s._v(" 七.代理服务")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("前言")]),s._v(" "),t("p",[s._v("nginx是一个高性能的反向代理服务器,ngin 在应用程序中的作用")]),s._v(" "),t("ul",[t("li",[s._v("解决跨域")]),s._v(" "),t("li",[s._v("请求过滤")]),s._v(" "),t("li",[s._v("配置 gzip")]),s._v(" "),t("li",[s._v("负载均衡")]),s._v(" "),t("li",[s._v("静态资源服务器")])])]),s._v(" "),t("h2",{attrs:{id:"_1-正向代理与反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-正向代理与反向代理"}},[s._v("#")]),s._v(" 1.正向代理与反向代理")]),s._v(" "),t("p",[t("code",[s._v("代理")]),s._v("是在服务器和客户端之间假设的一层服务器，"),t("code",[s._v("代理")]),s._v("将接收客户端的请求并将它转发给服务器，然后将服务端的响应转发给客户端。")]),s._v(" "),t("h4",{attrs:{id:"正向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正向代理"}},[s._v("#")]),s._v(" 正向代理")]),s._v(" "),t("p",[s._v("正向代理，意思是一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标（原始服务器），然后代理向原始服务器转交请求并将获得的内容返归给客户端。")]),s._v(" "),t("p",[s._v("正向代理是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到她本身无法访问到的服务器资源。")]),s._v(" "),t("p",[s._v("正向代理对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("location / "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tproxy_pass http://"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_host")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request_uri")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[s._v("#")]),s._v(" 反向代理")]),s._v(" "),t("p",[s._v("反向代理是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接客户端，此时代理服务器对外表现为一个反向代理服务器。")]),s._v(" "),t("p",[s._v("反向代理是为服务端服务的，反向代理可以帮助服务器接受来自客户端的请求，帮助服务器做请求转发，负载均衡等。")]),s._v(" "),t("p",[s._v("反向代理对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("resolver "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.8")]),s._v(".8.8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nlocation ~ ^/api "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      proxy_pass http://127.0.0.1:3000"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_2-基本配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本配置"}},[s._v("#")]),s._v(" 2.基本配置")]),s._v(" "),t("h4",{attrs:{id:"配置结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置结构"}},[s._v("#")]),s._v(" 配置结构")]),s._v(" "),t("ul",[t("li",[s._v("main:nginx 的全局配置，对全局生效")]),s._v(" "),t("li",[s._v("events:配置影响 nginx 服务器或与用户的网路连接。")]),s._v(" "),t("li",[s._v("http:可以嵌套多个 server,配置代理，缓存，日志定义等大多数功能和第三方模块的配置。")]),s._v(" "),t("li",[s._v("location：配置虚拟主机的相关参数，一个 http 可以有多个 server")]),s._v(" "),t("li",[s._v("upstream:配置后端服务器具体地址，负载均衡配置不可或缺的部分。")])]),s._v(" "),t("h4",{attrs:{id:"请求跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求跨域"}},[s._v("#")]),s._v(" 请求跨域")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("前端 server 的域名为："),t("code",[s._v("fe.server.com")])])]),s._v(" "),t("li",[t("p",[s._v("后端服务的域名为："),t("code",[s._v("dev.server.com")])]),s._v(" "),t("p",[s._v("现在我在"),t("code",[s._v("fe.server.com")]),s._v("对"),t("code",[s._v("dev.server.com")]),s._v("发起请求一定会出现跨域")]),s._v(" "),t("p",[s._v("现在我们只需要启动一个 nginx 服务器，将"),t("code",[s._v("server_name")]),s._v("设置为"),t("code",[s._v("fe.server.com")]),s._v("，然后设置相应的 location 以拦截前端需要跨域的请求，最后将请求代理回"),t("code",[s._v("dev.server.com")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("server {\n\tlisten 80;\n\tserver_name fe.server.com;\n\tlocation / {\n\t\tproxy_pass dev.server.com\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])]),s._v(" "),t("p",[s._v("这样可以完美绕过浏览器的同源策略："),t("code",[s._v("fe.server.com")]),s._v("访问"),t("code",[s._v("nginx")]),s._v("的"),t("code",[s._v("fe.server.com")]),s._v("属于同源访问，而"),t("code",[s._v("nginx")]),s._v("对服务端转发的请求不会触发浏览器的同源策略。")]),s._v(" "),t("h4",{attrs:{id:"请求过滤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求过滤"}},[s._v("#")]),s._v(" 请求过滤")]),s._v(" "),t("p",[s._v("根据状态码过滤")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("error_page 500 501 502 503 504 506 /50x.html;\n\tlocation = /50x.html {\n\t\troot /root/static/html;\n\t}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("根据 URL 名称过滤，精准匹配 URL，不匹配的 URL 全部重定向到主页")]),s._v(" "),t("h4",{attrs:{id:"配置-gzip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-gzip"}},[s._v("#")]),s._v(" 配置 gzip")]),s._v(" "),t("p",[s._v("GZIP 是规定的三种标准 http 压缩格式之一，目前绝大多数的网站都在使用 GZIP 传输 HTML、CSS、JavaScript 等资源文件。")]),s._v(" "),t("p",[s._v("对于文本文件，GZIP 的效果非常明显，卡其后传输所需的流量大约会将至 1/4~1/3")]),s._v(" "),t("p",[s._v("并不是每个浏览器都支持 gzip 的，如何知道客户端是否支持 gzip 呢，请求头中 Accept-Encoding 来标识对压缩的支持。")]),s._v(" "),t("p",[s._v("启用 gzip 同时需要客户端和服务端的支持，如果客户端支持 gzip 的解析，那么指定要服务端能够返回 gzip 的文件就可以启用 gzip 了，我们可以通过 nginx 的配置来让服务端支持 gzip.下面的 response 中 content-encoding:gzip，指服务端开启了 gzip 的压缩方式。")]),s._v(" "),t("h5",{attrs:{id:"gzip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gzip"}},[s._v("#")]),s._v(" gzip")]),s._v(" "),t("ul",[t("li",[s._v("开启或者关闭 gzip 模块")]),s._v(" "),t("li",[s._v("默认值为 off")]),s._v(" "),t("li",[s._v("可以配置 on/off")])]),s._v(" "),t("h5",{attrs:{id:"gzip-http-version"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gzip-http-version"}},[s._v("#")]),s._v(" gzip_http_version")]),s._v(" "),t("ul",[t("li",[s._v("启用 gzip 所需的 http 最低版本")]),s._v(" "),t("li",[s._v("默认值为 http/1.1")])]),s._v(" "),t("p",[s._v("这里为什么默认版本不是 1.0 呢")]),s._v(" "),t("p",[s._v("http 运行在 tcp 连接之上，自然也有着 tcp 一样的三次握手，慢启动等特性。")]),s._v(" "),t("p",[s._v("启用持久连接情况下，服务器发出响应后让 tcp 连接继续打开着，同一对客户/服务器之间的后续请求和响应可以通过这个连接发送请求。")])])}),[],!1,null,null,null);t.default=v.exports}}]);